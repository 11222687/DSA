Maximum Subarray

// Time Complexity: O(n)
// Space Complexity: O(1)
// Kadane's Algorithm

class Solution {
    public int maxSubArray(int[] nums) {
        int sum = 0;
        int maxi = nums[0];

        for(int i=0; i<nums.length; i++){
            // current subarray sum
            sum += nums[i];
            if(sum > maxi){
                maxi = sum;
            }

            if(sum < 0){
                sum = 0;
            }
        }

        return maxi;
    }
}